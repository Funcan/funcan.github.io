{"version":3,"sources":["components/Appbar.js","utils/nicedate.js","components/PostCorousel.js","components/Sidebar.js","components/Theme.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["AppBar","props","react_default","a","createElement","Box","Object","assign","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","niceDate","date","getDay","getDate","getMonth","getHours","String","getMinutes","padStart","PostCorousel","state","activeIndex","posts","onRight","_this$state","_this","length","setState","title","onLeft","postToUrl","post","Title","replace","findIndex","i","this","_this2","map","fetch","Post","then","response","text","data","Content","_this3","json","updatePosts","_this$state2","index","console","log","content","leftpic","Image","centerpic","rightpic","toDate","RFC2822","Date","postcontent","postdate","flex","Keyboard","height","Grid","areas","name","start","end","columns","rows","Button","fill","icon","CaretPrevious","gridArea","onClick","hoverIndicator","overflow","alignSelf","src","fit","opacity","CaretNext","width","Paragraph","Markdown","Component","Sidebar","margin","round","Rss","label","href","target","Search","Mail","Linkedin","Github","Theme","global","colors","brand","buttonbg","sidebar","font","family","size","Header","showSidebar","components_PostCorousel","Grommet","theme","full","ResponsiveContext","Consumer","Appbar","Menu","prevState","Heading","level","horizontal","Layer","FormClose","Collapsible","open","App","react_router","exact","path","render","components_Header","_ref","match","params","Boolean","window","location","hostname","ReactDOM","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9429c9c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Box,\n} from 'grommet';\n\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nexport default AppBar\n","// Turn a javascript Date object into a string like \"Tuesday 19 March 15:04\".\n// Return an empty string for a null date.\n\nconst niceDate = function(date) {\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  let ret;\n  if (date) {\n    ret = days[date.getDay()] + \" \" + date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getHours() + \":\" + String(date.getMinutes()).padStart(2, \"0\");\n  } else {\n    ret = \"\";\n  }\n\n  return ret\n}\n\nexport default niceDate;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Grid,\n  Image,\n  Keyboard,\n  Markdown,\n  Paragraph,\n} from 'grommet';\nimport {\n  CaretNext,\n  CaretPrevious,\n} from 'grommet-icons';\nimport toDate from '@fav/type.to-date';\n\nimport niceDate from '../utils/nicedate';\n\n\nclass PostCorousel extends Component {\n  state = {\n    activeIndex: 0,\n    posts: []\n  };\n\n  updatePosts(posts) {\n    this.setState({posts: posts});\n    posts.map(post => fetch(post.Post).then(response => response.text()).then(data => {\n      post.Content = data;\n      this.setState({posts: posts, activeIndex: posts.length-1});\n    }))\n  }\n\n  componentDidMount() {\n    const { title } = this.props;\n    this.setState({\n      title: title,\n    });\n    fetch('/posts.json')\n      .then(response => response.json())\n      .then(data => this.updatePosts(data.posts))\n  }\n\n  onRight = () => {\n    const { activeIndex, posts } = this.state;\n\n    if (activeIndex < posts.length - 1) {\n      this.setState({\n        activeIndex: activeIndex + 1,\n        title: null,\n      });\n    }\n  };\n\n  onLeft = () => {\n    const { activeIndex } = this.state;\n\n    if (activeIndex > 0) {\n      this.setState({\n        activeIndex: activeIndex - 1,\n        title: null,\n      });\n    }\n  };\n\n  postToUrl = (post) => {\n    return post.Title.replace(\" \", \"_\");\n  }\n\n  findIndex = function(posts, title) {\n    if (!posts) {\n      return -1;\n    }\n    for (let i= 0; i< posts.length; i++) {\n      let posttitle = this.postToUrl(posts[i])\n      if (title === posttitle) {\n        return i;\n      }\n    }\n  }\n\n  render() {\n    const { activeIndex, posts, title} = this.state;\n\n    if (title) {\n      let index = this.findIndex(posts, title);\n      if (index !== -1) {\n        if (activeIndex !== index) {\n          this.setState({\n            activeIndex: index,\n          });\n          return null;\n        }\n      } else {\n        console.log(\"Post not found\");\n      }\n    }\n\n    var left = (activeIndex > 0 ? posts[activeIndex-1].Image : \"1px.png\");\n    const leftpic = left;\n\n    var center;\n    if (posts.length > 0) {\n      center = posts[activeIndex].Image;\n    } else {\n      center = \"1px.png\";\n    }\n    const centerpic = center;\n\n    var right;\n    if ((posts.length > 1) && (activeIndex < posts.length - 1)) {\n      right = posts[activeIndex + 1].Image;\n    } else {\n      right = \"1px.png\";\n    }\n    const rightpic = right;\n\n    const onLeft = this.onLeft;\n    const onRight = this.onRight;\n\n    var content;\n    var date;\n    if (posts.length > 0) {\n      if (posts[activeIndex].Content) {\n        content = posts[activeIndex].Content;\n        date = toDate.RFC2822(posts[activeIndex].Date);\n      } else {\n        content = \"Loading...\";\n        date = null;\n      }\n    } else {\n      content = \"Loading...\";\n      date = null;\n    }\n    const postcontent = content;\n    const postdate = niceDate(date);\n\n    return (\n      <Box flex align='center' justify='center'>\n        <Keyboard onLeft={onLeft} onRight={onRight}>\n          <Box height='medium' direction='row'>\n            <Grid\n              areas = {[\n                { name: 'previcon', start: [0, 0], end: [0, 1] },\n                { name: 'left', start: [1, 0], end: [1, 0] },\n                { name: 'center', start: [2, 0], end: [2, 0] },\n                { name: 'right', start: [3, 0], end: [3, 0] },\n                { name: 'nexticon', start: [4, 0], end: [4, 1] },\n                { name: 'title', start: [1, 1], end: [3, 1] },\n              ]}\n              columns = {['xxsmall', 'flex', 'medium', 'flex', 'xxsmall']}\n              rows = {['medium', 'small']}\n            >\n\n              <Button\n                fill\n                icon={<CaretPrevious />}\n                gridArea='previcon'\n                onClick={onLeft}\n                hoverIndicator\n              />\n\n              <Box gridArea='left' overflow='hidden'>\n                <Image alignSelf='end' src={leftpic} fit='contain' opacity=\"0.2\"/>\n              </Box>\n\n              <Box gridArea='center' direction=\"row\">\n                <Image alignSelf=\"center\" src={centerpic} fit='contain'/>\n              </Box>\n\n              <Box gridArea='right' overflow='hidden'>\n                <Image alignSelf='start' src={rightpic} fit='contain' opacity=\"0.2\"/>\n              </Box>\n\n              <Button\n                fill\n                icon={<CaretNext />}\n                gridArea='nexticon'\n                onClick={onRight}\n                hoverIndicator\n              />\n            </Grid>\n          </Box>\n        </Keyboard>\n        <Box align=\"center\" flex width=\"large\">\n          <Paragraph alignSelf=\"center\">\n            {postdate}\n          </Paragraph>\n          <Markdown>\n            {postcontent}\n          </Markdown>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default PostCorousel\n","import React from 'react';\nimport {\n  Box,\n  Button,\n} from 'grommet';\nimport {\n  Github,\n  Linkedin,\n  Mail,\n  Rss,\n  Search,\n} from 'grommet-icons';\n\nconst Sidebar = (\n  <Box>\n    <Box background='buttonbg' margin='xsmall' round='medium'>\n      <Button\n        icon={<Rss />}\n\tlabel='Subscribe'\n\thref='/rss.xml'\n\ttarget='#'\n      />\n    </Box>\n    <Box background='buttonbg' margin='xsmall' round='medium'>\n      <Button\n        icon={<Search />}\n\tlabel='Posts'\n\tonClick={() => {}}\n      />\n    </Box>\n    <Box background='buttonbg' margin='xsmall' round='medium'>\n      <Button\n        icon={<Mail />}\n\tlabel='EMail'\n\thref='mailto:duncan.thomas@gmail.com'\n\ttarget=\"#\"\n      />\n    </Box>\n    <Box background='buttonbg' margin='xsmall' round='medium'>\n      <Button\n        icon={<Linkedin />}\n\tlabel='Connect'\n\thref = \"https://www.linkedin.com/in/duncanthomas/\"\n\ttarget=\"#\"\n      />\n    </Box>\n    <Box background='buttonbg' margin='xsmall' round='medium'>\n      <Button\n        icon={<Github />}\n\tlabel='Code'\n\thref=\"https://github.com/Funcan\"\n\ttarget=\"#\"\n      />\n    </Box>\n  </Box>\n)\n\nexport default Sidebar\n","const Theme = {\n  global: {\n    colors: {\n      brand: '#228BE6',\n      buttonbg: '#FFA500',\n      sidebar: '#114583',\n    },\n    font: {\n      family: 'Roboto',\n      size: '14px',\n      height: '20px',\n    },\n  },\n};\n\nexport default Theme\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Button,\n  Collapsible,\n  Grommet,\n  Heading,\n  Layer,\n  ResponsiveContext,\n} from 'grommet';\nimport {\n  FormClose,\n  Menu,\n} from 'grommet-icons';\n\nimport AppBar from './Appbar'\nimport PostCorousel from './PostCorousel'\nimport Sidebar from './Sidebar'\nimport Theme from './Theme'\n\n\nclass Header extends Component {\n  state = {\n    showSidebar: false,\n  }\n\n\n  render() {\n    const { showSidebar } = this.state;\n    const { post } = this.props;\n\n    console.log(\"Header.render(): Post: \" + post);\n\n    let ContentChoice\n    if (post) {\n      ContentChoice = ( <PostCorousel title={post}/> )\n    } else  {\n      ContentChoice = ( <PostCorousel /> )\n    }\n\n    const Content = ContentChoice;\n\n    return (\n      <Grommet theme={Theme} full>\n        <ResponsiveContext.Consumer>\n          {size => (\n            <Box fill>\n              <AppBar>\n                <Button\n                  icon={<Menu />}\n                  onClick={() => this.setState(prevState => ({ showSidebar: !prevState.showSidebar }))}\n                />\n                <Heading level='3' margin='none'>funcan.github.io</Heading>\n              </AppBar>\n              <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n                {(!showSidebar || size !== 'small') ? (\n                  <Collapsible direction=\"horizontal\" open={showSidebar}>\n                    <Box\n                      flex\n                      width='small'\n                      background='sidebar'\n                      elevation='small'\n                      align='center'\n                      justify='center'\n                    >\n                      {Sidebar}\n                    </Box>\n                  </Collapsible>\n                ): (\n                  <Layer>\n                    <Box\n                      background='sidebar'\n                      tag='header'\n                      justify='end'\n                      align='center'\n                      direction='row'\n                    >\n                      <Button\n                        icon={<FormClose />}\n                        onClick={() => this.setState({ showSidebar: false })}\n                      />\n                    </Box>\n                    <Box\n                      fill\n                      align='center'\n                      justify='center'\n                    >\n                      {Sidebar}\n                    </Box>\n                  </Layer>\n                )}\n\n                <Box flex align='center' justify='center'>\n                  {Content}\n                </Box>\n\n              </Box>\n            </Box>\n          )}\n        </ResponsiveContext.Consumer>\n      </Grommet>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react'\n\nimport { Switch, Route } from 'react-router-dom'\nimport Header from './Header'\n\nconst App = () => (\n  <Switch>\n    <Route exact path='/' render={() => (<Header />)}/>\n    <Route path='/post/:title' render={({match}) => (<Header post={match.params.title}/>)}/>\n    <Route render={() => (<div> Sorry, this page does not exist. </div>)} />\n  </Switch>\n)\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}